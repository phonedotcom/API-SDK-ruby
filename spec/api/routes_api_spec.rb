=begin
#Phone.com API

#This is a Phone.com api Swagger definition

OpenAPI spec version: 1.0.0
Contact: apisupport@phone.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::RoutesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'RoutesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::RoutesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RoutesApi' do
    it 'should create an instact of RoutesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::RoutesApi)
    end
  end

  # unit tests for create_route
  # Add a new address book contact for an extension
  # For more on the input fields, see Intro to Routes.
  # @param account_id Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateRouteParams] :data Route data
  # @return [RouteFull]
  describe 'create_route test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_account_route
  # 
  # 
  # @param account_id Account ID
  # @param route_id Route ID
  # @param [Hash] opts the optional parameters
  # @return [DeleteRoute]
  describe 'delete_account_route test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_account_route
  # Show details of an individual route
  # This service shows the details of an individual route.
  # @param account_id Account ID
  # @param route_id Route ID
  # @param [Hash] opts the optional parameters
  # @return [RouteFull]
  describe 'get_account_route test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_account_routes
  # Get a list of routes for an account
  # See Intro to Routes for more info on the properties.
  # @param account_id Account ID
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :filters_id ID filter
  # @option opts [Array<String>] :filters_name Name filter
  # @option opts [String] :sort_id ID sorting
  # @option opts [String] :sort_name Name sorting
  # @option opts [Integer] :limit Max results
  # @option opts [Integer] :offset Results to skip
  # @option opts [String] :fields Field set
  # @return [ListRoutes]
  describe 'list_account_routes test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for replace_account_route
  # 
  # For more on the input fields, see Intro to Routes.
  # @param account_id Account ID
  # @param route_id Route ID
  # @param [Hash] opts the optional parameters
  # @option opts [CreateRouteParams] :data Route data
  # @return [RouteFull]
  describe 'replace_account_route test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
